<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <GroupAction />
    <_.fcp.GroupActionAddRemove.true...GroupActionAddRemove />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
        <calculation class='tableau' formula='&quot;day&quot;' />
        <members>
          <member value='&quot;day&quot;' />
          <member value='&quot;week&quot;' />
          <member value='&quot;month&quot;' />
        </members>
      </column>
      <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
        <calculation class='tableau' formula='100' />
      </column>
    </datasource>
    <datasource caption='BikeShareData (london_bikes_final)' inline='true' name='federated.18kh8tc0ky4bm01fej7y41dzsc7s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='london_bikes_final' name='excel-direct.04bnlbi029obnc13swszw15cqku8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/aisha/Documents/Analysis Projects/BikeSharingProject/london_bikes_final.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.04bnlbi029obnc13swszw15cqku8' name='BikeShareData' table='[BikeShareData$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='temp_real_C' ordinal='3' />
            <column datatype='real' name='temp_feels_like_C' ordinal='4' />
            <column datatype='real' name='humidity' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.04bnlbi029obnc13swszw15cqku8' name='BikeShareData' table='[BikeShareData$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='temp_real_C' ordinal='3' />
            <column datatype='real' name='temp_feels_like_C' ordinal='4' />
            <column datatype='real' name='humidity' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[BikeShareData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K17415:no:A1:K17415:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[BikeShareData]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BikeShareData_0F3A417F72784DADA674E16F3E57E3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[BikeShareData]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BikeShareData_0F3A417F72784DADA674E16F3E57E3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[BikeShareData]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BikeShareData_0F3A417F72784DADA674E16F3E57E3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_real_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_real_C]</local-name>
            <parent-name>[BikeShareData]</parent-name>
            <remote-alias>temp_real_C</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BikeShareData_0F3A417F72784DADA674E16F3E57E3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_feels_like_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_feels_like_C]</local-name>
            <parent-name>[BikeShareData]</parent-name>
            <remote-alias>temp_feels_like_C</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BikeShareData_0F3A417F72784DADA674E16F3E57E3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humidity]</local-name>
            <parent-name>[BikeShareData]</parent-name>
            <remote-alias>humidity</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BikeShareData_0F3A417F72784DADA674E16F3E57E3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed_kph</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_speed_kph]</local-name>
            <parent-name>[BikeShareData]</parent-name>
            <remote-alias>wind_speed_kph</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BikeShareData_0F3A417F72784DADA674E16F3E57E3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[BikeShareData]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BikeShareData_0F3A417F72784DADA674E16F3E57E3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday]</local-name>
            <parent-name>[BikeShareData]</parent-name>
            <remote-alias>is_holiday</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BikeShareData_0F3A417F72784DADA674E16F3E57E3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[BikeShareData]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BikeShareData_0F3A417F72784DADA674E16F3E57E3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[BikeShareData]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BikeShareData_0F3A417F72784DADA674E16F3E57E3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Moving Average Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Moving Average Period' datatype='datetime' name='[Calculation_3112198482053922823]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATETRUNC([Parameters].[Parameter 1], [time])' />
      </column>
      <column caption='Min Month' datatype='date' datatype-customized='true' name='[Calculation_3112198482055344136]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE({MIN(IF [Moving Average Period Set] THEN [Calculation_3112198482053922823] END)})' />
      </column>
      <column caption='In Range' datatype='boolean' name='[Calculation_5115174417941966848]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_3112198482053922823] &gt;= [Calculation_3112198482055344136] &#10;AND&#10;[Calculation_3112198482053922823] &lt;= [Min Month (copy)_3112198482055495689]' />
      </column>
      <column caption='In Range Rides' datatype='integer' name='[Calculation_5115174418082095105]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{  SUM(INT([Calculation_5115174417941966848]) * [count]) }' />
      </column>
      <column caption='Max Month' datatype='date' datatype-customized='true' name='[Min Month (copy)_3112198482055495689]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE({MAX(IF [Moving Average Period Set] THEN [Calculation_3112198482053922823] END)})' />
      </column>
      <column caption='Wind Kph ' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='BikeShareData' datatype='table' name='[__tableau_internal_object_id__].[BikeShareData_0F3A417F72784DADA674E16F3E57E3A1]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Humidity' datatype='real' name='[humidity]' role='measure' type='quantitative' />
      <column caption='Is Holiday' datatype='integer' name='[is_holiday]' role='measure' type='quantitative' />
      <column caption='Is Weekend' datatype='integer' name='[is_weekend]' role='measure' type='quantitative' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column caption='Temp C ' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
      </column>
      <column caption='temp feels like C' datatype='real' name='[temp_feels_like_C]' role='measure' type='quantitative' />
      <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
      <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_5115174417941966848]' derivation='Attribute' name='[attr:Calculation_5115174417941966848:nk]' pivot='key' type='nominal' />
      <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
      <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
      <group caption='Moving Average Period Set' name='[Moving Average Period Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-02 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-03 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-04 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-05 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-06 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-07 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-08 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-09 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-10 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-11 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-12 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-13 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-14 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-15 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-16 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-17 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-18 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-19 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-20 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-21 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-22 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-23 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-24 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-25 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-26 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-27 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-28 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-29 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-04-30 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-01 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-02 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-03 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-04 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-05 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-06 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-07 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-08 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-09 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-10 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-11 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-12 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-13 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-14 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-15 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-16 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-17 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-18 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-19 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-20 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-21 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-22 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-23 00:00:00#' />
          <groupfilter function='member' level='[Calculation_3112198482053922823]' member='#2015-05-24 00:00:00#' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Min Month,Max Month,Wind Kph ,Temp C )' hidden='true' name='[Tooltip (Min Month,Max Month,Wind Kph ,Temp C )]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_3112198482055344136]' />
          <groupfilter function='level-members' level='[Min Month (copy)_3112198482055495689]' />
          <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
          <groupfilter function='level-members' level='[temp real C (bin)]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Moving Average Period,Min Month,Max Month)' hidden='true' name='[Tooltip (Moving Average Period,Min Month,Max Month)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_3112198482053922823]' />
          <groupfilter function='level-members' level='[Calculation_3112198482055344136]' />
          <groupfilter function='level-members' level='[Min Month (copy)_3112198482055495689]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.915572' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0844278' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:Calculation_5115174417941966848:nk]' type='palette'>
            <map to='#009051'>
              <bucket>true</bucket>
            </map>
            <map to='#b2afe9'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:time:ok]' type='palette'>
            <map to='#499894'>
              <bucket>8</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>20</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>18</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>16</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>14</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>7</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>22</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>23</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:weather:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Clear&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cloudy&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Rain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rain with thunderstorm&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broken clouds&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Snowfall&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scattered clouds&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
        </column>
        <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
          <calculation class='tableau' formula='100' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='BikeShareData' id='BikeShareData_0F3A417F72784DADA674E16F3E57E3A1'>
            <properties context=''>
              <relation connection='excel-direct.04bnlbi029obnc13swszw15cqku8' name='BikeShareData' table='[BikeShareData$]' type='table'>
                <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
                  <column datatype='integer' name='count' ordinal='2' />
                  <column datatype='real' name='temp_real_C' ordinal='3' />
                  <column datatype='real' name='temp_feels_like_C' ordinal='4' />
                  <column datatype='real' name='humidity' ordinal='5' />
                  <column datatype='real' name='wind_speed_kph' ordinal='6' />
                  <column datatype='string' name='weather' ordinal='7' />
                  <column datatype='integer' name='is_holiday' ordinal='8' />
                  <column datatype='integer' name='is_weekend' ordinal='9' />
                  <column datatype='string' name='season' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <edit-group-action caption='Update Moving Average Period  Set' name='[Action1_88A2B58A95114929ACC7E7A7E6F2C19B]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='MovingAverage' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='do-nothing' />
        <param name='target-group' value='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[Moving Average Period Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Heatmap'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#009051'>Temp vs Wind Speed </run>
            <run>Æ&#10;</run>
            <run fontcolor='#009051' fontsize='12'><![CDATA[between <[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482055344136:qk]> and <[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Min Month (copy)_3112198482055495689:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='BikeShareData (london_bikes_final)' name='federated.18kh8tc0ky4bm01fej7y41dzsc7s' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18kh8tc0ky4bm01fej7y41dzsc7s'>
            <column caption='Moving Average Period' datatype='datetime' name='[Calculation_3112198482053922823]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATETRUNC([Parameters].[Parameter 1], [time])' />
            </column>
            <column caption='Min Month' datatype='date' datatype-customized='true' name='[Calculation_3112198482055344136]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE({MIN(IF [Moving Average Period Set] THEN [Calculation_3112198482053922823] END)})' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_5115174417941966848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_3112198482053922823] &gt;= [Calculation_3112198482055344136] &#10;AND&#10;[Calculation_3112198482053922823] &lt;= [Min Month (copy)_3112198482055495689]' />
            </column>
            <column caption='Max Month' datatype='date' datatype-customized='true' name='[Min Month (copy)_3112198482055495689]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE({MAX(IF [Moving Average Period Set] THEN [Calculation_3112198482053922823] END)})' />
            </column>
            <column caption='Wind Kph ' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3112198482055344136]' derivation='None' name='[none:Calculation_3112198482055344136:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5115174417941966848]' derivation='None' name='[none:Calculation_5115174417941966848:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_3112198482055495689]' derivation='None' name='[none:Min Month (copy)_3112198482055495689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wind Speed Kph (bin)]' derivation='None' name='[none:Wind Speed Kph (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[temp real C (bin)]' derivation='None' name='[none:temp real C (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column caption='Temp C ' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_5115174417941966848:nk]'>
            <groupfilter function='member' level='[none:Calculation_5115174417941966848:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_5115174417941966848:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:temp real C (bin):ok]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Wind Speed Kph (bin):ok]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e5dce4</color>
                <color>#d9c9d8</color>
                <color>#cdb6cc</color>
                <color>#c2a4c0</color>
                <color>#b693b4</color>
                <color>#aa83a8</color>
                <color>#9f749c</color>
                <color>#936690</color>
                <color>#875984</color>
                <color>#7c4d79</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#f0f1e8' />
            <format attr='stroke-color' id='refline0' value='#009051' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]' />
              <text column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]' />
              <lod column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482055344136:qk]' />
              <lod column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Min Month (copy)_3112198482055495689:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#009051'><![CDATA[Temp C :	<[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:temp real C (bin):ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#009051'><![CDATA[Wind Kph :	<[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Wind Speed Kph (bin):ok]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#009051'><![CDATA[<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#009051'><![CDATA[<Sheet name="Hour" maxwidth="300" maxheight="400" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:temp real C (bin):ok]</rows>
        <cols>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Wind Speed Kph (bin):ok]</cols>
        <show-full-range>
          <column>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[Wind Speed Kph (bin)]</column>
          <column>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[temp real C (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{F77ADC2E-C88F-4D92-B4E6-1ED18FBF13FA}' />
    </worksheet>
    <worksheet name='Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='BikeShareData (london_bikes_final)' name='federated.18kh8tc0ky4bm01fej7y41dzsc7s' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18kh8tc0ky4bm01fej7y41dzsc7s'>
            <column caption='Moving Average Period' datatype='datetime' name='[Calculation_3112198482053922823]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATETRUNC([Parameters].[Parameter 1], [time])' />
            </column>
            <column caption='Min Month' datatype='date' datatype-customized='true' name='[Calculation_3112198482055344136]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE({MIN(IF [Moving Average Period Set] THEN [Calculation_3112198482053922823] END)})' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_5115174417941966848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_3112198482053922823] &gt;= [Calculation_3112198482055344136] &#10;AND&#10;[Calculation_3112198482053922823] &lt;= [Min Month (copy)_3112198482055495689]' />
            </column>
            <column caption='Max Month' datatype='date' datatype-customized='true' name='[Min Month (copy)_3112198482055495689]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE({MAX(IF [Moving Average Period Set] THEN [Calculation_3112198482053922823] END)})' />
            </column>
            <column caption='Wind Kph ' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3112198482055344136]' derivation='None' name='[none:Calculation_3112198482055344136:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5115174417941966848]' derivation='None' name='[none:Calculation_5115174417941966848:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_3112198482055495689]' derivation='None' name='[none:Min Month (copy)_3112198482055495689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column caption='Temp C ' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[Tooltip (Min Month,Max Month,Wind Kph ,Temp C )]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_3112198482055344136]' member='#2015-04-02#' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Min Month (copy)_3112198482055495689]' member='#2015-05-24#' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Wind Speed Kph (bin)]' member='3' />
                  <groupfilter function='member' level='[temp real C (bin)]' member='7' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[Tooltip (Moving Average Period,Min Month,Max Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_3112198482053922823]' />
              <groupfilter function='level-members' level='[Calculation_3112198482055344136]' />
              <groupfilter function='level-members' level='[Min Month (copy)_3112198482055495689]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_5115174417941966848:nk]'>
            <groupfilter function='member' level='[none:Calculation_5115174417941966848:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_5115174417941966848:nk]</column>
            <column>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[Tooltip (Moving Average Period,Min Month,Max Month)]</column>
            <column>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[Tooltip (Min Month,Max Month,Wind Kph ,Temp C )]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#f0f1e8' />
            <format attr='stroke-color' id='refline0' value='#009051' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[hr:time:ok]' />
              <text column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]' />
              <lod column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482055344136:qk]' />
              <lod column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Min Month (copy)_3112198482055495689:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[hr:time:ok]</rows>
        <cols>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{ADE50862-7277-4D9E-BB09-9A146FFCDB0F}' />
    </worksheet>
    <worksheet name='MovingAverage'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#009051'>&lt;</run>
            <run bold='true' fontcolor='#009051'>[Parameters].[Parameter 2]</run>
            <run bold='true' fontcolor='#009051'>&gt; &lt;</run>
            <run bold='true' fontcolor='#009051'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontcolor='#009051'>&gt; moving average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='BikeShareData (london_bikes_final)' name='federated.18kh8tc0ky4bm01fej7y41dzsc7s' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
            <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
              <calculation class='tableau' formula='100' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18kh8tc0ky4bm01fej7y41dzsc7s'>
            <column caption='Moving Average Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Moving Average Period' datatype='datetime' name='[Calculation_3112198482053922823]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATETRUNC([Parameters].[Parameter 1], [time])' />
            </column>
            <column caption='Min Month' datatype='date' datatype-customized='true' name='[Calculation_3112198482055344136]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE({MIN(IF [Moving Average Period Set] THEN [Calculation_3112198482053922823] END)})' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_5115174417941966848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_3112198482053922823] &gt;= [Calculation_3112198482055344136] &#10;AND&#10;[Calculation_3112198482053922823] &lt;= [Min Month (copy)_3112198482055495689]' />
            </column>
            <column caption='Max Month' datatype='date' datatype-customized='true' name='[Min Month (copy)_3112198482055495689]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE({MAX(IF [Moving Average Period Set] THEN [Calculation_3112198482053922823] END)})' />
            </column>
            <column-instance column='[Calculation_5115174417941966848]' derivation='Attribute' name='[attr:Calculation_5115174417941966848:nk]' pivot='key' type='nominal' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3112198482053922823]' derivation='None' name='[none:Calculation_3112198482053922823:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3112198482055344136]' derivation='None' name='[none:Calculation_3112198482055344136:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_3112198482055495689]' derivation='None' name='[none:Min Month (copy)_3112198482055495689:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482053922823:qk]' included-values='all' />
          <slices>
            <column>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482053922823:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[usr:Calculation1:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482053922823:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#f0f1e8' />
            <format attr='stroke-color' id='refline0' value='#009051' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='border-style' value='dotted' />
            <format attr='border-color' value='#009051' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#009051' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[attr:Calculation_5115174417941966848:nk]' />
              <lod column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482055344136:qk]' />
              <lod column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Min Month (copy)_3112198482055495689:qk]' />
            </encodings>
            <reference-line axis-column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482053922823:qk]' enable-instant-analytics='false' formula='min' id='refline0' label-type='none' paired-id='refline1' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482055344136:qk]' z-order='1' />
            <reference-line axis-column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482053922823:qk]' enable-instant-analytics='false' formula='max' id='refline1' label-type='none' paired-id='refline0' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Min Month (copy)_3112198482055495689:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#009051'><![CDATA[Date:	<[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482053922823:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#009051'><![CDATA[Moving Average Rides:	<[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[usr:Calculation1:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Hour" maxwidth="300" maxheight="400" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[usr:Calculation1:qk]</rows>
        <cols>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482053922823:qk]</cols>
      </table>
      <simple-id uuid='{8FD3BC49-F6E5-4651-93FA-367681A788FA}' />
    </worksheet>
    <worksheet name='TotalRides'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#009051'>London Bike Rides</run>
            <run>Æ&#10;</run>
            <run fontcolor='#009051' fontsize='10'><![CDATA[between <[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482055344136:qk]> and <[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Min Month (copy)_3112198482055495689:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='BikeShareData (london_bikes_final)' name='federated.18kh8tc0ky4bm01fej7y41dzsc7s' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18kh8tc0ky4bm01fej7y41dzsc7s'>
            <column caption='Moving Average Period' datatype='datetime' name='[Calculation_3112198482053922823]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATETRUNC([Parameters].[Parameter 1], [time])' />
            </column>
            <column caption='Min Month' datatype='date' datatype-customized='true' name='[Calculation_3112198482055344136]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE({MIN(IF [Moving Average Period Set] THEN [Calculation_3112198482053922823] END)})' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_5115174417941966848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_3112198482053922823] &gt;= [Calculation_3112198482055344136] &#10;AND&#10;[Calculation_3112198482053922823] &lt;= [Min Month (copy)_3112198482055495689]' />
            </column>
            <column caption='In Range Rides' datatype='integer' name='[Calculation_5115174418082095105]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{  SUM(INT([Calculation_5115174417941966848]) * [count]) }' />
            </column>
            <column caption='Max Month' datatype='date' datatype-customized='true' name='[Min Month (copy)_3112198482055495689]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE({MAX(IF [Moving Average Period Set] THEN [Calculation_3112198482053922823] END)})' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3112198482055344136]' derivation='None' name='[none:Calculation_3112198482055344136:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5115174417941966848]' derivation='None' name='[none:Calculation_5115174417941966848:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_3112198482055495689]' derivation='None' name='[none:Min Month (copy)_3112198482055495689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5115174418082095105]' derivation='Sum' name='[sum:Calculation_5115174418082095105:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_5115174417941966848:nk]'>
            <groupfilter function='member' level='[none:Calculation_5115174417941966848:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_5115174417941966848:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#f0f1e8' />
            <format attr='stroke-color' id='refline0' value='#009051' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:Calculation_5115174418082095105:qk]' />
              <lod column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Min Month (copy)_3112198482055495689:qk]' />
              <lod column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482055344136:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#009051' fontsize='36'>&lt;</run>
                <run bold='true' fontcolor='#009051' fontsize='36'>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:Calculation_5115174418082095105:qk]</run>
                <run bold='true' fontcolor='#009051' fontsize='36'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C35582CD-0630-437F-9C0F-C76EFEFF27DD}' />
    </worksheet>
    <worksheet name='Weather'>
      <table>
        <view>
          <datasources>
            <datasource caption='BikeShareData (london_bikes_final)' name='federated.18kh8tc0ky4bm01fej7y41dzsc7s' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18kh8tc0ky4bm01fej7y41dzsc7s'>
            <column caption='Moving Average Period' datatype='datetime' name='[Calculation_3112198482053922823]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATETRUNC([Parameters].[Parameter 1], [time])' />
            </column>
            <column caption='Min Month' datatype='date' datatype-customized='true' name='[Calculation_3112198482055344136]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE({MIN(IF [Moving Average Period Set] THEN [Calculation_3112198482053922823] END)})' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_5115174417941966848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_3112198482053922823] &gt;= [Calculation_3112198482055344136] &#10;AND&#10;[Calculation_3112198482053922823] &lt;= [Min Month (copy)_3112198482055495689]' />
            </column>
            <column caption='Max Month' datatype='date' datatype-customized='true' name='[Min Month (copy)_3112198482055495689]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE({MAX(IF [Moving Average Period Set] THEN [Calculation_3112198482053922823] END)})' />
            </column>
            <column caption='Wind Kph ' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3112198482055344136]' derivation='None' name='[none:Calculation_3112198482055344136:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5115174417941966848]' derivation='None' name='[none:Calculation_5115174417941966848:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_3112198482055495689]' derivation='None' name='[none:Min Month (copy)_3112198482055495689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column caption='Temp C ' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[Tooltip (Min Month,Max Month,Wind Kph ,Temp C )]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_3112198482055344136]' member='#2015-04-02#' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Min Month (copy)_3112198482055495689]' member='#2015-05-24#' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Wind Speed Kph (bin)]' member='3' />
                  <groupfilter function='member' level='[temp real C (bin)]' member='7' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[Tooltip (Moving Average Period,Min Month,Max Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_3112198482053922823]' />
              <groupfilter function='level-members' level='[Calculation_3112198482055344136]' />
              <groupfilter function='level-members' level='[Min Month (copy)_3112198482055495689]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_5115174417941966848:nk]'>
            <groupfilter function='member' level='[none:Calculation_5115174417941966848:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:weather:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Clear&quot;</bucket>
              <bucket>&quot;Scattered clouds&quot;</bucket>
              <bucket>&quot;Broken clouds&quot;</bucket>
              <bucket>&quot;Rain&quot;</bucket>
              <bucket>&quot;Cloudy&quot;</bucket>
              <bucket>&quot;Snowfall&quot;</bucket>
              <bucket>&quot;Rain with thunderstorm&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_5115174417941966848:nk]</column>
            <column>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[Tooltip (Moving Average Period,Min Month,Max Month)]</column>
            <column>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[Tooltip (Min Month,Max Month,Wind Kph ,Temp C )]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#f0f1e8' />
            <format attr='stroke-color' id='refline0' value='#009051' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:weather:nk]' />
              <text column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]' />
              <lod column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482055344136:qk]' />
              <lod column='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Min Month (copy)_3112198482055495689:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:weather:nk]</rows>
        <cols>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{AF6472DA-2E95-47AD-828A-B049293CAACB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='border-style' value='dotted' />
          <format attr='border-color' value='#009051' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-weight' value='bold' />
          <format attr='color' value='#009051' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='BikeShareData (london_bikes_final)' name='federated.18kh8tc0ky4bm01fej7y41dzsc7s' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
          <members>
            <member value='&quot;day&quot;' />
            <member value='&quot;week&quot;' />
            <member value='&quot;month&quot;' />
          </members>
        </column>
        <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
          <calculation class='tableau' formula='100' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.18kh8tc0ky4bm01fej7y41dzsc7s'>
        <column caption='Moving Average Period' datatype='datetime' name='[Calculation_3112198482053922823]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATETRUNC([Parameters].[Parameter 1], [time])' />
        </column>
        <column-instance column='[Calculation_3112198482053922823]' derivation='None' name='[none:Calculation_3112198482053922823:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='15' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='13' type-v2='layout-basic' w='98828' x='586' y='1042'>
              <zone h='38932' id='8' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='38932' id='6' type-v2='layout-basic' w='98828' x='586' y='1042'>
                  <zone h='38932' id='3' name='TotalRides' w='23058' x='586' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='38932' id='5' name='MovingAverage' w='75770' x='23644' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='58984' id='11' name='Heatmap' w='98828' x='586' y='39974'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6380' id='10' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='10542' x='74963' y='1172' />
        <zone h='6510' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='11786' x='62811' y='1172' />
        <zone forceUpdate='true' h='7943' id='12' type-v2='text' w='10029' x='52416' y='391'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#009051'>Drag and Hold to select</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#009051'>time period on timeline</run>
          </formatted-text>
        </zone>
        <zone h='8464' id='16' name='MovingAverage' param='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482053922823:qk]' type-v2='filter' values='database' w='12299' x='85871' y='1172' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='17' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone forceUpdate='true' h='7943' id='12' type-v2='text' w='10029' x='52416' y='391'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#009051'>Drag and Hold to select</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#009051'>time period on timeline</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38932' id='3' is-fixed='true' name='TotalRides' w='23058' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8464' id='16' name='MovingAverage' param='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482053922823:qk]' type-v2='filter' values='database' w='12299' x='85871' y='1172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38932' id='5' is-fixed='true' name='MovingAverage' w='75770' x='23644' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6510' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='11786' x='62811' y='1172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6380' id='10' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='10542' x='74963' y='1172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58984' id='11' is-fixed='true' name='Heatmap' w='98828' x='586' y='39974'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C925CB49-103F-48FA-94CC-C595C4B69740}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='MovingAverage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[attr:Calculation_5115174417941966848:nk]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[io:Moving Average Period Set:nk]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482053922823:qk]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[yr:Calculation_3112198482053922823:ok]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[yr:Calculation_3112198482055344136:ok]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[yr:Min Month (copy)_3112198482055495689:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EEA9C6D6-2AA0-484D-8C46-BFB84B5C8E95}' />
    </window>
    <window class='worksheet' name='TotalRides'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_5115174417941966848:nk]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[yr:Calculation_3112198482055344136:ok]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[yr:Min Month (copy)_3112198482055495689:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E884CD88-7FA3-43ED-A3D4-32801FA1FD91}' />
    </window>
    <window class='worksheet' name='Heatmap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Wind Speed Kph (bin):ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:temp real C (bin):ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482055344136:qk]</field>
                  <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Min Month (copy)_3112198482055495689:qk]</field>
                  <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Wind Speed Kph (bin):ok]</field>
                  <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:temp real C (bin):ok]</field>
                  <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>#2015-09-28#</value>
                <value>#2015-12-25#</value>
                <value>4</value>
                <value>1</value>
                <value>306</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_5115174417941966848:nk]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Wind Speed Kph (bin):ok]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:temp real C (bin):ok]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[yr:Calculation_3112198482055344136:ok]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[yr:Min Month (copy)_3112198482055495689:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A7F2BDBE-9AA0-45CB-B694-D0BCE35543C2}' />
    </window>
    <window class='worksheet' name='Weather'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_5115174417941966848:nk]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:weather:nk]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[yr:Calculation_3112198482055344136:ok]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[yr:Min Month (copy)_3112198482055495689:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7ACF3591-B5F2-46D0-BBD8-8B8180705B47}' />
    </window>
    <window class='worksheet' name='Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[hr:time:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[hr:time:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[hr:time:ok]</field>
                  <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_3112198482055344136:qk]</field>
                  <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Min Month (copy)_3112198482055495689:qk]</field>
                  <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[sum:count:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7</value>
                <value>#2015-09-28#</value>
                <value>#2015-12-25#</value>
                <value>123716</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[hr:time:ok]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[hr:time:qk]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[none:Calculation_5115174417941966848:nk]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[yr:Calculation_3112198482055344136:ok]</field>
            <field>[federated.18kh8tc0ky4bm01fej7y41dzsc7s].[yr:Min Month (copy)_3112198482055495689:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA9D8090-3B05-4F31-85DC-6C3A85E82393}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Heatmap'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MovingAverage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TotalRides'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{91E46372-4460-46B5-A7C9-5CC06DA566AA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      DLwZIgASCfTVec4DtgAoHZT9HeGSmQbgG3CgHVAFQDqwPkyRSJDJZP2d4pIYjUa6uwbWiRhm
      s9nSXmQgkcpkffb+GHivhiAIgvC7EAVAEARhkBIFQBAEYZASBUAQBGGQEgXgf5Rer6eltYWW
      1pbzLpnv7u6mtq7W8nNDY8N5jeA6Ojvo0VjvimW9Xk9tY62lf4/RaKS98/yrNTu6OmjvbEej
      1aBSq2jvbLf8/MP/71JZp+HXD5kbWxoB0Oq0VNdXX3BGTH1TPSq1CuhtoFhVV3Xef4e2jjaM
      RuudFGDraIutoy1SuQwk4OjuhEx+/oFFhY0CZy8Xy8+Obo7YOtgCIFPIcPF2/f6UFOuQK+V4
      +HtYzpCSK+XY2Nmct8bF08WSUWGjwN7J3vLzz+9vvcyelr/p4umCndOPfdEkUgn2zvbYO9sj
      lUmxc7Lr/fn7NTZ2Nji5O1kt7yUPhPHw6G1Tunr1amQyGd7e3gC0t7fz6aefkpaWxoQJE/o0
      NDCgepf8wKC1YjO4XTtYsXIFhcWFjBg+AjtbOzq7Ornv4fs4nZmBVCIhvyCfL9d8RUlpMVMn
      T6W9vZ3rFy3E0dGJYXHxALTV9N1sB41Ww9/+uYzahlqOnz7OpFGTWL1tDZ+t/5yFs3rnKJhM
      Jh7526O0tLcil8nIKczhaNoxPlu/Ej8vX/YnHSQlI4W9ifuYM/Xq3gfuw3/wGq2Gv73/N3IL
      c9Hp9Rw6fpDSyjLW71pv+fu7E3ZzJCWBrQe2MnHkBN5c8XeaW5s4fPwwU8ZOITPvDEte+hNX
      TboSJ0cndBodrXUtfZbZ3tmeeQ9fi4OrA5puDaPnjMEjwJMRs0ZSmNbbKtnZ05kZd87EzsGW
      7rZuYibGEhwfiouXC611rcy5fx4KWyVGvQFVhwqj0YhWo+2zzDb2ttz89C3Y2Nmg1xnoau3i
      +sduIGJUJAVpvbMiYsbHEjUmhvHXTKCxqpGpN00jICoAryAvGisbL7g/9G2jQFsHW2557jZs
      7JQYdHriJw8jamwM7n7uVOX3tmQPjA7imgfm4+7rTmt9K+OvmUhYfDjXPDCfmuIapt8yg8hR
      UUhlUpqqer9k+IX491kzuIs6DfSHgTCurq5ER0eTmppKSUkJnp6exMf3flB8+eWX3HDDDXh5
      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
    </thumbnail>
    <thumbnail height='384' name='Heatmap' width='384'>
      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
      8tznPpd6vc78/DzpdJper+f3mQsuuIA777yTT33qU9TrdXq93nQngFQqRbFYxHVdarUasVgM
      27aJx+PUajVc16VUKpFKpSYah+M4/OIv/iIf+tCH2N7e5ujRo9i2TS6X44EHHuC2227jkUce
      4ROf+MRE44hEIqysrPBbv/VbvPSlL+X73/8+tm2jKAq/+Zu/ybOf/WxWV1cntvxzkFgsRq1W
      o9Pp+IO84zg4jsOv/Mqv8Kd/+qd86UtfmkgH301RFN70pjfxh3/4h9x22204juP/g1/FYpHN
      zU1/eWrSfvSjHxGLxVhfX/f/LXnbtrn55pu56KKLeNOb3jT2hHj06FHe//738+Y3v5nnPe95
      pFIpSqWSf29o1HcCgQBLS0u8/e1v55WvfCXf+973xhqH4zjccsstrK6u8pa3vIVer8c3v/lN
      7rjjDv7+7/+ev/iLv8B1XVzX9ft3o9GYyBLun/zJn+C6Lu9617uIRCJ4nsedd97JNddcg6qq
      /j7rd911F4888gh//ud/zhe/+EUqlcrYYvA8j7W1NW699VZe+tKX8tnPfpZoNEq9Xqfdbu/p
      M5dffjlvfOMbecYznkEymSQSiUz3PYCf+Zmf4dOf/jTvec97mJ+fxzAM3vnOd3LTTTexsrLC
      Lbfcws7ODi9/+csnGscPfvADPvvZz/pXUslkkre+9a3ccsst3H777QD8xm/8Bq9+9asnGkcy
      mWRtbY2bb76ZnZ0d3vrWt/Kud72Lt73tbXz+85+nWq3y4IMP8s53vnNiMXzyk5/kO9/5DoPB
      gGAwyIte9CL+8A//0P//hx9+mLvvvptLLrmE+++/n0gkQigUIhgMjjWOu+++m/vuu49cLscn
      P/lJHMehWCz6a961Wo0/+IM/4IYbbuB//a//xb/9t/8WXR9/d/rGN77BN7/5Tf7xH/+Rj3zk
      I/zn//yf+fSnP81rXvMaFEWh0+lw00038eu//ut8//vfJxQK8Xd/93e88pWvHOss4Gtf+xq2
      bXP77bcTj8d53etexyc/+Une8573EI/HSaVSXH/99bz1rW/lOc95Dr/zO79DrVbj137t18YW
      AwxnhN/5zncwDIMf/ehHXHvttf6/tX/99dfzyle+knvuuQdN03jxi1/MH//xHxMOh3nxi188
      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
    </thumbnail>
    <thumbnail height='384' name='Hour' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='MovingAverage' width='384'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='140' name='TotalRides' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Weather' width='384'>
      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
      Y8wC3JY702MYx7K0byPycfSDMCIihtJukoiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGU
      AiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARhjdnKQ9FBdpscQEbmEAjDG
      7EQfqdD7mR5DROQSCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAK
      gIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUApABti2TW9vL4cPHyYQ
      CGDbNgChUIjKykpOnTrlXGbbNk1NTZw/fz6TI4vIVUgB+ARs2yYSiTA0NHTZ62OxGADJZJJk
      Mvmxy9u9ezdr1qzh5z//OXfccQcHDhygvb2dO+64g//93//lH//xH+ns7ASgpqaGO+64g29/
      +9uj94RERADL/t2uZiqVcjZkf6z6+vrYvXs3tm2TlZXF+vXr8fv9n3m5x44do7a2lhtvvJHZ
      s2dfcv1vf/tbHnroIY4fP47P52POnDnOdeloI6ngYbJKH3Yuq6+vZ9KkSeTl5fGjH/2I/Px8
      wuEwPp9vxIbetm0eeeQRli5dyjvvvMMLL7zwmZ+LiMhFnkwPMJr27dvHmjVrKCwsJBwO4/F4
      CIfDWJZFd3c3EydOJC8vj3Q6TVtbGy6Xi8mTJxOPx0mn0/j9fsLhMFlZWWRnZxMOhwE4c+YM
      S5cupaSkhEQiQVdXFy6Xi9LSUlyuP/xD1OzZs0mlUjz99NNs376d5557ju9///sEAgE2b95M
      SUkJTz/9NJWVlUycOJHly5fzzjvvjPbqEhHDXVWHgCZPnsyBAwfo6+sjLy+PrKws3nrrLXbt
      2kV7ezsvvfQS6XSa119/nbNnz3Lq1CkqKysJhULs27cP27bZsWMHBw8exLZtdu3aRV9fH/39
      /bS0tNDd3c3JkydpaWnh+PHj7N+//1PNmUgkeOyxx9i5cycvvvgiM2bMwOPx8Pjjj7Nz506m
      TZvGr371K5588klmz57Nvn37aGtro7q6epTXmIiY7KoKwNKlS5k3bx5vv/0227ZtIx6P43a7
      ueOOO1i2bBm5ubkkk0mCwSCrV69m7dq1tLe3k5+fT39/P6lUipycHPr6+hgYGMDv91NRUUFZ
      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
    </thumbnail>
  </thumbnails>
</workbook>
